<?xml version="1.0" encoding="utf-8"?>
<resources>
    <declare-styleable name="KakaoDialogSpinner">
        <attr name="kakao_prompt" format="string"/>
        <attr name="kakao_entries" format="reference"/>
        <attr name="kakao_icon" format="reference"/>
        <attr name="kakao_dialogTitle" format="reference"/>
        <attr name="kakao_showTitleDivider" format="boolean"/>
        <attr name="kakao_titleTextColor" format="reference"/>
    </declare-styleable>

    <!--<declare-styleable name="CircleIndicator">
        <attr name="ci_width" format="dimension"/>
        <attr name="ci_height" format="dimension"/>
        <attr name="ci_margin" format="dimension"/>
        <attr name="ci_animator" format="reference"/>
        <attr name="ci_animator_reverse" format="reference"/>
        <attr name="ci_drawable" format="reference"/>
        <attr name="ci_drawable_unselected" format="reference"/>

        <attr name="ci_orientation" format="enum">
            &lt;!&ndash; Defines an horizontal widget. &ndash;&gt;
            <enum name="horizontal" value="0"/>
            &lt;!&ndash; Defines a vertical widget. &ndash;&gt;
            <enum name="vertical" value="1"/>
        </attr>

        <attr name="ci_gravity">
            &lt;!&ndash; Push object to the top of its container, not changing its size. &ndash;&gt;
            <flag name="top" value="0x30"/>
            &lt;!&ndash; Push object to the bottom of its container, not changing its size. &ndash;&gt;
            <flag name="bottom" value="0x50"/>
            &lt;!&ndash; Push object to the left of its container, not changing its size. &ndash;&gt;
            <flag name="left" value="0x03"/>
            &lt;!&ndash; Push object to the right of its container, not changing its size. &ndash;&gt;
            <flag name="right" value="0x05"/>
            &lt;!&ndash; Place object in the vertical center of its container, not changing its size. &ndash;&gt;
            <flag name="center_vertical" value="0x10"/>
            &lt;!&ndash; Grow the vertical size of the object if needed so it completely fills its container. &ndash;&gt;
            <flag name="fill_vertical" value="0x70"/>
            &lt;!&ndash; Place object in the horizontal center of its container, not changing its size. &ndash;&gt;
            <flag name="center_horizontal" value="0x01"/>
            &lt;!&ndash; Grow the horizontal size of the object if needed so it completely fills its container. &ndash;&gt;
            <flag name="fill_horizontal" value="0x07"/>
            &lt;!&ndash; Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. &ndash;&gt;
            <flag name="center" value="0x11"/>
            &lt;!&ndash; Grow the horizontal and vertical size of the object if needed so it completely fills its container. &ndash;&gt;
            <flag name="fill" value="0x77"/>
            &lt;!&ndash; Additional option that can be set to have the top and/or bottom edges of
            the child clipped to its container's bounds.
            The clip will be based on the vertical gravity: a top gravity will clip the bottom
            edge, a bottom gravity will clip the top edge, and neither will clip both edges. &ndash;&gt;
            <flag name="clip_vertical" value="0x80"/>
            &lt;!&ndash; Additional option that can be set to have the left and/or right edges of
            the child clipped to its container's bounds.
            The clip will be based on the horizontal gravity: a left gravity will clip the right
            edge, a right gravity will clip the left edge, and neither will clip both edges. &ndash;&gt;
            <flag name="clip_horizontal" value="0x08"/>
            &lt;!&ndash; Push object to the beginning of its container, not changing its size. &ndash;&gt;
            <flag name="start" value="0x00800003"/>
            &lt;!&ndash; Push object to the end of its container, not changing its size. &ndash;&gt;
            <flag name="end" value="0x00800005"/>
        </attr>

    </declare-styleable>-->

    <!-- DiscreteSeekBar specific attributes -->
    <declare-styleable name="Theme">
        <attr name="discreteSeekBarStyle" format="reference"/>
    </declare-styleable>
    <declare-styleable name="DiscreteSeekBar">
        <attr name="dsb_min" format="integer|dimension"/>
        <attr name="dsb_max" format="integer|dimension"/>
        <attr name="dsb_value" format="integer|dimension"/>
        <attr name="dsb_mirrorForRtl" format="boolean"/>
        <attr name="dsb_allowTrackClickToDrag" format="boolean"/>
        <attr name="dsb_progressColor" format="color|reference"/>
        <attr name="dsb_trackColor" format="color|reference"/>
        <attr name="dsb_indicatorTextAppearance" format="reference"/>
        <attr name="dsb_indicatorColor" format="color|reference"/>
        <attr name="dsb_indicatorElevation" format="dimension"/>
        <attr name="dsb_indicatorFormatter" format="string|reference"/>
        <attr name="dsb_rippleColor" format="color|reference"/>
        <attr name="dsb_indicatorPopupEnabled" format="boolean"/>
        <attr name="dsb_trackHeight" format="integer|dimension"/>
        <attr name="dsb_scrubberHeight" format="integer|dimension"/>
        <attr name="dsb_thumbSize" format="integer|dimension"/>
        <attr name="dsb_indicatorSeparation" format="integer|dimension"/>
    </declare-styleable>

    <declare-styleable name="CircleImageView">
        <attr name="civ_border_width" format="dimension" />
        <attr name="civ_border_color" format="color" />
        <attr name="civ_border_overlay" format="boolean" />
        <attr name="civ_fill_color" format="color" />
        <attr name="civ_circle_background_color" format="color" />
    </declare-styleable>

    <declare-styleable name="BaseCircleIndicator">
        <attr name="ci_width" format="dimension"/>
        <attr name="ci_height" format="dimension"/>
        <attr name="ci_margin" format="dimension"/>
        <attr name="ci_animator" format="reference"/>
        <attr name="ci_animator_reverse" format="reference"/>
        <attr name="ci_drawable" format="reference"/>
        <attr name="ci_drawable_unselected" format="reference"/>

        <attr name="ci_orientation" format="enum">
            <!-- Defines an horizontal widget. -->
            <enum name="horizontal" value="0"/>
            <!-- Defines a vertical widget. -->
            <enum name="vertical" value="1"/>
        </attr>

        <attr name="ci_gravity">
            <!-- Push object to the top of its container, not changing its size. -->
            <flag name="top" value="0x30"/>
            <!-- Push object to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50"/>
            <!-- Push object to the left of its container, not changing its size. -->
            <flag name="left" value="0x03"/>
            <!-- Push object to the right of its container, not changing its size. -->
            <flag name="right" value="0x05"/>
            <!-- Place object in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10"/>
            <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70"/>
            <!-- Place object in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01"/>
            <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
            <flag name="fill_horizontal" value="0x07"/>
            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11"/>
            <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill" value="0x77"/>
            <!-- Additional option that can be set to have the top and/or bottom edges of
            the child clipped to its container's bounds.
            The clip will be based on the vertical gravity: a top gravity will clip the bottom
            edge, a bottom gravity will clip the top edge, and neither will clip both edges. -->
            <flag name="clip_vertical" value="0x80"/>
            <!-- Additional option that can be set to have the left and/or right edges of
            the child clipped to its container's bounds.
            The clip will be based on the horizontal gravity: a left gravity will clip the right
            edge, a right gravity will clip the left edge, and neither will clip both edges. -->
            <flag name="clip_horizontal" value="0x08"/>
            <!-- Push object to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003"/>
            <!-- Push object to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005"/>
        </attr>

    </declare-styleable>


</resources>
